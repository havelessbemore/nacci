{"version":3,"file":"nacci.min.cjs","sources":["../../src/utils/array.ts","../../src/error/dimensionError.ts","../../src/error/integerError.ts","../../src/error/outOfBoundsError.ts","../../src/globals.ts","../../src/error/unsafeError.ts","../../src/utils/is.ts","../../src/utils/try.ts","../../src/utils/powers.ts","../../src/kbonacci/gen/kPowerGen.ts","../../src/kbonacci/gen/powerGen.ts","../../src/kbonacci/gen/slidingWindowGen.ts","../../src/utils/matrix.ts","../../src/kbonacci/encoding/encoding.ts","../../src/kbonacci/encoding/matrix/matrixEncoding.ts","../../src/kbonacci/encoding/revSum/revSumEncoding.ts","../../src/kbonacci/encoding/sum/sumEncoding.ts","../../src/kbonacci/encoding/term/termEncoding.ts","../../src/ops/bigOps.ts","../../src/ops/numOps.ts","../../src/ops/safeNumOps.ts","../../src/kbonacci/wrapper/bigKbonacci.ts","../../src/kbonacci/wrapper/bigFibonacci.ts","../../src/kbonacci/wrapper/bigTribonacci.ts","../../src/kbonacci/wrapper/kbonacci.ts","../../src/kbonacci/wrapper/fibonacci.ts","../../src/kbonacci/wrapper/tribonacci.ts"],"sourcesContent":["import { Ops } from \"../ops/ops\";\n\nexport function copy<T>(\n  A: T[],\n  B: T[],\n  target = 0,\n  start = 0,\n  end = A.length\n): T[] {\n  if (A === B) {\n    return A.copyWithin(target, start, end);\n  }\n  if (target < 0) {\n    target = Math.max(0, B.length + target);\n  }\n  if (start < 0) {\n    start = Math.max(0, A.length + start);\n  }\n  if (end < 0) {\n    end = Math.max(0, A.length + end);\n  }\n  end = start + Math.max(0, Math.min(B.length - target, end - start));\n  while (start < end) {\n    B[target++] = A[start++];\n  }\n  return B;\n}\n\nexport function getSum<T>(arr: T[], ops: Ops<T>): T | undefined {\n  const N = arr.length;\n  if (N < 1) {\n    return undefined;\n  }\n  let value = arr[0];\n  for (let i = 1; i < N; ++i) {\n    value = ops.plus(value, arr[i]);\n  }\n  return value;\n}\n\nexport function padStart<T>(\n  array: T[],\n  targetLength: number,\n  padValue: T\n): void {\n  if (targetLength <= array.length) {\n    return;\n  }\n  const N = array.length;\n  const i = targetLength - N;\n  array.length = targetLength;\n  array.fill(padValue, N, i);\n  array.copyWithin(i, 0, N);\n  array.fill(padValue, 0, Math.min(i, N));\n}\n","export class DimensionError extends RangeError {\n  constructor(\n    actual: number | number[],\n    expected: number | number[],\n    relation = \"!=\"\n  ) {\n    const a = Array.isArray(actual) ? actual.join(\"x\") : `${actual}`;\n    const b = Array.isArray(expected) ? expected.join(\"x\") : `${expected}`;\n    super(`Dimension mismatch. ${a} ${relation} ${b}`);\n  }\n}\n","export class IntegerError extends TypeError {\n  constructor(value: unknown, label = \"Value\") {\n    super(`Not an integer. ${label}: ${String(value)}`);\n  }\n}\n","export class OutOfBoundsError extends RangeError {\n  constructor(\n    actual: unknown,\n    min?: unknown,\n    max?: unknown,\n    label = \"index\",\n    msg = \"Out of bounds\"\n  ) {\n    const message = [msg];\n    if (min != null || max != null) {\n      message.push(`. Expected`);\n      if (min != null) {\n        message.push(` ${String(min)} <=`);\n      }\n      message.push(` ${label}`);\n      if (max != null) {\n        message.push(` <= ${String(max)}`);\n      }\n    }\n    message.push(`. ${label}: ${String(actual)}`);\n    super(message.join(\"\"));\n  }\n}\n","export const K_MIN = 2;\nexport const SAFE_MAX = Number.MAX_SAFE_INTEGER;\nexport const SAFE_MIN = Number.MIN_SAFE_INTEGER;\n","import { SAFE_MAX, SAFE_MIN } from \"../globals\";\nimport { OutOfBoundsError } from \"./outOfBoundsError\";\n\nexport class UnsafeError extends OutOfBoundsError {\n  constructor(actual: number) {\n    super(actual, SAFE_MIN, SAFE_MAX, \"value\", \"Unsafe value\");\n  }\n}\n","import { SAFE_MIN, SAFE_MAX } from \"../globals\";\n\nexport function isBigInt(value: unknown): value is bigint {\n  return typeof value === \"bigint\";\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value: unknown): value is Function {\n  return typeof value === \"function\";\n}\n\nexport function isInteger(value: unknown): value is number {\n  return Number.isInteger(value);\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === \"number\";\n}\n\nexport function isSafeNumber(value: number): boolean {\n  return value >= SAFE_MIN && value <= SAFE_MAX;\n}\n","import { DimensionError } from \"../error/dimensionError\";\nimport { IntegerError } from \"../error/integerError\";\nimport { OutOfBoundsError } from \"../error/outOfBoundsError\";\nimport { UnsafeError } from \"../error/unsafeError\";\nimport { K_MIN } from \"../globals\";\nimport { isInteger, isSafeNumber } from \"./is\";\n\nexport function tryInteger<T>(n: T): T {\n  if (!isInteger(n)) {\n    throw new IntegerError(n);\n  }\n  return n;\n}\n\nexport function tryK(K: number): number {\n  if (!isInteger(K)) {\n    throw new IntegerError(K, \"K\");\n  }\n  if (K < K_MIN) {\n    throw new OutOfBoundsError(K, K_MIN, undefined, \"K\");\n  }\n  return K;\n}\n\nexport function tryNumTerms<T>(maxLen: number, terms: T[]): T[] {\n  if (terms.length > maxLen) {\n    throw new DimensionError(terms.length, maxLen, \"<=\");\n  }\n  return terms;\n}\n\nexport function trySafe(n: number): number {\n  if (!isSafeNumber(n)) {\n    throw new UnsafeError(n);\n  }\n  return n;\n}\n","import { OutOfBoundsError } from \"../error/outOfBoundsError\";\nexport interface KeyOps<T> {\n  cast(value: unknown): T;\n  equal(a: T, b: T): boolean;\n  half(a: T): T;\n  isOdd(a: T): boolean;\n  sign(a: T): number;\n  trunc(a: T): T;\n}\n\nexport interface ValueOps<T> {\n  times(a: T, b: T): T;\n  square(a: T): T;\n}\n\nexport class Powers<K, V> {\n  protected cached: boolean;\n  protected keyOps: KeyOps<K>;\n  protected valOps: ValueOps<V>;\n  protected pows: V[];\n\n  constructor(value: V, keyOps: KeyOps<K>, valOps: ValueOps<V>, cached = true) {\n    this.cached = cached;\n    this.keyOps = keyOps;\n    this.pows = [value];\n    this.valOps = valOps;\n  }\n\n  get size(): number {\n    return this.pows.length;\n  }\n\n  clear(): void {\n    this.pows.length = 1;\n  }\n\n  get(N: K): V {\n    const keyOps = this.keyOps;\n    const valOps = this.valOps;\n\n    const pows = this.cached ? this.pows : [this.pows[0]];\n    let value: V | undefined = undefined;\n\n    for (let i = 0; keyOps.sign(N) > 0; ++i) {\n      if (pows[i] == null) {\n        pows[i] = valOps.square(pows[i - 1]);\n      }\n      if (keyOps.isOdd(N)) {\n        if (value == null) {\n          value = pows[i];\n        } else {\n          value = valOps.times(value, pows[i]);\n        }\n      }\n      N = keyOps.trunc(keyOps.half(N));\n    }\n\n    if (value == null) {\n      throw new OutOfBoundsError(N, keyOps.cast(1));\n    }\n\n    return value;\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  setCached(cached: boolean): void {\n    this.cached = cached;\n    if (!cached) {\n      this.clear();\n    }\n  }\n\n  setValue(value: V): void {\n    if (value !== this.pows[0]) {\n      this.pows = [value];\n      this.clear();\n    }\n  }\n}\n","import { Generator } from \"./generator\";\nimport { Ops } from \"../../ops/ops\";\nimport { getSum } from \"../../utils/array\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Powers } from \"../../utils/powers\";\nimport { Encoding } from \"../encoding/encoding\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class KPowerGen<K, V> implements Generator<K, V> {\n  private cached: boolean;\n  private customs: V[];\n  private encoding: Encoding<V, unknown>;\n  private indexOps: Ops<K>;\n  private isStd: boolean;\n  private _K: number;\n  private neg: Powers<K, unknown>;\n  private pos: Powers<K, unknown>;\n  private v0: V;\n  private valueOps: Ops<V>;\n  private zero: unknown;\n\n  constructor(K: number, config: GenConfig<K, V, unknown>) {\n    tryK(K);\n\n    const cached = config.cached ?? true;\n    const customs = config.customs ?? [];\n    const encoding = config.encoding;\n    const indexOps = config.indexOps ?? config.ops;\n    const valueOps = config.valueOps ?? config.ops;\n    if (encoding == null) {\n      throw new TypeError(`Missing encoding`);\n    }\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n    if (valueOps == null) {\n      throw new TypeError(`Missing value operations`);\n    }\n\n    this.cached = cached;\n    this.customs = customs;\n    this.encoding = encoding;\n    this.indexOps = indexOps;\n    this.isStd = false;\n    this._K = K;\n    this.neg = new Powers(encoding.genNegK(K), indexOps, encoding, cached);\n    this.pos = new Powers(encoding.genK(K), indexOps, encoding, cached);\n    this.zero = encoding.genZero(K);\n    this.v0 = encoding.toValue(this.zero, 0);\n    this.valueOps = valueOps;\n    this.setCustoms(customs);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    const iOps = this.indexOps;\n\n    const T = iOps.cast(this.customs.length - 1);\n    if (iOps.sign(N) >= 0 && iOps.smallerEq(N, T)) {\n      return this.customs[iOps.toNumber(N)];\n    }\n\n    let data: unknown;\n    let delta: K;\n\n    N = iOps.minus(N, T);\n    const K = iOps.cast(this.K);\n    if (iOps.sign(N) > 0) {\n      const mod = iOps.mod(iOps.minus1(N), K);\n      delta = iOps.minus1(K);\n      N = iOps.trunc(iOps.dividedBy(N, K));\n      N = iOps.equal(mod, delta) ? N : iOps.plus1(N);\n      delta = iOps.plus(iOps.negative(delta), mod);\n      data = this.pos.get(N);\n    } else if (iOps.larger(N, iOps.negative(K))) {\n      delta = N;\n      data = this.zero;\n    } else {\n      delta = iOps.mod(N, K);\n      N = iOps.negative(N);\n      N = iOps.trunc(iOps.dividedBy(N, K));\n      data = this.neg.get(N);\n    }\n\n    const customs = this.isStd ? undefined : this.customs;\n    return this.encoding.toValue(data, iOps.toNumber(delta), customs);\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  getCustoms(): V[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.cached = value;\n    this.neg.setCached(value);\n    this.pos.setCached(value);\n  }\n\n  setCustoms(customs?: V[]): void {\n    const vOps = this.valueOps;\n    if (customs == null || customs.length < 1) {\n      this.isStd = true;\n      this.customs = [this.v0];\n      return;\n    }\n    const K = this.K;\n    this.isStd = false;\n    tryNumTerms(K, customs);\n    customs = Array.from(customs);\n    if (customs.length < K) {\n      let value: V = getSum(customs, vOps)!;\n      for (let i = K - customs.length; i > 0; --i) {\n        customs.push(value);\n        value = vOps.plus(value, value);\n      }\n    }\n    this.customs = customs;\n  }\n}\n","import { Ops } from \"../../ops/ops\";\nimport { getSum } from \"../../utils/array\";\nimport { Generator } from \"./generator\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Powers } from \"../../utils/powers\";\nimport { Encoding } from \"../encoding/encoding\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class PowerGen<K, V> implements Generator<K, V> {\n  private cached: boolean;\n  private customs: V[];\n  private encoding: Encoding<V, unknown>;\n  private indexOps: Ops<K>;\n  private isStd: boolean;\n  private _K: number;\n  private neg: Powers<K, unknown>;\n  private pos: Powers<K, unknown>;\n  private v0: V;\n  private valueOps: Ops<V>;\n\n  constructor(K: number, config: GenConfig<K, V, unknown>) {\n    tryK(K);\n\n    const cached = config.cached ?? true;\n    const customs = config.customs ?? [];\n    const encoding = config.encoding;\n    const indexOps = config.indexOps ?? config.ops;\n    const valueOps = config.valueOps ?? config.ops;\n    if (encoding == null) {\n      throw new TypeError(`Missing encoding`);\n    }\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n    if (valueOps == null) {\n      throw new TypeError(`Missing value operations`);\n    }\n\n    this.cached = cached;\n    this.customs = [];\n    this.encoding = encoding;\n    this.indexOps = indexOps;\n    this.isStd = false;\n    this._K = K;\n    this.neg = new Powers(encoding.genNegOne(K), indexOps, encoding, cached);\n    const one = encoding.genOne(K);\n    this.pos = new Powers(one, indexOps, encoding, cached);\n    this.v0 = encoding.toValue(one, -1);\n    this.valueOps = valueOps;\n    this.setCustoms(customs);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    const iOps = this.indexOps;\n\n    const T = iOps.cast(this.customs.length - 1);\n    if (iOps.sign(N) >= 0 && iOps.smallerEq(N, T)) {\n      return this.customs[iOps.toNumber(N)];\n    }\n\n    N = iOps.minus(N, T);\n    const data =\n      iOps.sign(N) > 0 ? this.pos.get(N) : this.neg.get(iOps.negative(N));\n\n    const customs = this.isStd ? undefined : this.customs;\n    return this.encoding.toValue(data, 0, customs);\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  getCustoms(): V[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.cached = value;\n    this.neg.setCached(value);\n    this.pos.setCached(value);\n  }\n\n  setCustoms(customs?: V[]): void {\n    const vOps = this.valueOps;\n    if (customs == null || customs.length < 1) {\n      this.isStd = true;\n      this.customs = [this.v0];\n      return;\n    }\n    const K = this.K;\n    this.isStd = false;\n    tryNumTerms(K, customs);\n    customs = Array.from(customs);\n    if (customs.length < K) {\n      let value: V = getSum(customs, vOps)!;\n      for (let i = K - customs.length; i > 0; --i) {\n        customs.push(value);\n        value = vOps.plus(value, value);\n      }\n    }\n    this.customs = customs;\n  }\n}\n","import { padStart } from \"../../utils/array\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Generator } from \"./generator\";\nimport { Ops } from \"../../ops/ops\";\nimport { getSum } from \"../../utils/array\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class SlidingWindowGen<K, V> implements Generator<K, V> {\n  private delta: number;\n  private indexOps: Ops<K>;\n  private _K: number;\n  private minN: K;\n  private next: V;\n  private valueOps: Ops<V>;\n  private values: V[];\n\n  constructor(K: number, config: GenConfig<K, V, never>) {\n    tryK(K);\n\n    let customs = config.customs ?? [];\n    const indexOps = config.indexOps ?? config.ops;\n    const valueOps = config.valueOps ?? config.ops;\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n    if (valueOps == null) {\n      throw new TypeError(`Missing value operations`);\n    }\n\n    const _0 = valueOps.cast(0);\n    if (customs == null || customs.length < 1) {\n      const _1 = valueOps.cast(1);\n      customs = [_0, _1];\n    } else {\n      tryNumTerms(K, customs);\n    }\n\n    // Initialize properties\n    this.delta = 0;\n    this.indexOps = indexOps;\n    this._K = K;\n    this.valueOps = valueOps;\n    this.minN = indexOps.minus(indexOps.cast(customs.length), indexOps.cast(K));\n    this.next = getSum(customs, valueOps) ?? _0;\n    this.values = Array.from(customs);\n    padStart(this.values, K, _0);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    // Shift window\n    const ops = this.indexOps;\n    if (ops.smaller(N, this.minN)) {\n      this.reverse(ops.minus(this.minN, N));\n    } else {\n      const maxN = ops.plus(this.minN, ops.cast(this.K));\n      if (ops.largerEq(N, maxN)) {\n        this.forward(ops.plus1(ops.minus(N, maxN)));\n      }\n    }\n\n    // Return value\n    const i = ops.plus(ops.minus(N, this.minN), ops.cast(this.delta));\n    return this.values[ops.toNumber(i) % this.K];\n  }\n\n  private forward(i: K): void {\n    const iOps = this.indexOps;\n    const vOps = this.valueOps;\n\n    while (iOps.sign(i) > 0) {\n      const temp = this.values[this.delta];\n      this.values[this.delta] = this.next;\n      this.next = vOps.plus(this.next, vOps.minus(this.next, temp));\n      this.delta = (this.delta + 1) % this.K;\n      this.minN = iOps.plus1(this.minN);\n      i = iOps.minus1(i);\n    }\n  }\n\n  private reverse(i: K): void {\n    const iOps = this.indexOps;\n    const vOps = this.valueOps;\n\n    while (iOps.sign(i) > 0) {\n      const delta = (this.delta - 1 + this.K) % this.K;\n      const value = this.values[delta];\n      const newValue = vOps.plus(vOps.minus(value, this.next), value);\n      this.minN = iOps.minus1(this.minN);\n      this.next = value;\n      this.delta = delta;\n      this.values[delta] = newValue;\n      i = iOps.minus1(i);\n    }\n  }\n}\n","import { DimensionError } from \"../error/dimensionError\";\nimport { Ops } from \"../ops/ops\";\nimport { Matrix } from \"../type/matrix\";\n\nexport function fillMatrix<T>(matrix: Matrix<T>, value: T): void {\n  const M = matrix.length;\n  for (let m = 0; m < M; ++m) {\n    matrix[m].fill(value);\n  }\n}\n\nexport function initMatrix<T>(Y: number, X = Y): Matrix<T> {\n  const matrix = new Array<T[]>(Y);\n  for (let i = 0; i < Y; ++i) {\n    matrix[i] = new Array<T>(X);\n  }\n  return matrix;\n}\n\nexport function matrixMult<T>(\n  A: Matrix<T>,\n  B: Matrix<T>,\n  ops: Ops<T>,\n  zero: T = ops.cast(0)\n): Matrix<T> {\n  const M = A.length;\n  const N = A[0]?.length ?? 0;\n  const P = B[0]?.length ?? 0;\n  if (N !== B.length) {\n    throw new DimensionError([M, N], [B.length, P]);\n  }\n\n  const C = initMatrix<T>(M, P);\n  for (let m = 0; m < M; ++m) {\n    for (let p = 0; p < P; ++p) {\n      let val = zero;\n      for (let n = 0; n < N; ++n) {\n        const temp = ops.times(A[m][n], B[n][p]);\n        val = ops.plus(val, temp);\n      }\n      C[m][p] = val;\n    }\n  }\n\n  return C;\n}\n","export const EncodingFormat = {\n  Matrix: \"mat\",\n  RevSum: \"rsum\",\n  Sum: \"sum\",\n  Term: \"term\",\n} as const;\n\nexport interface Encoding<V, D = unknown> {\n  readonly format: string;\n  genK(K: number): D;\n  genNegK(K: number): D;\n  genNegOne(K: number): D;\n  genOne(K: number): D;\n  genZero(K: number): D;\n  pow(A: D, n: V): D;\n  shift(A: D, delta: number): D;\n  square(A: D): D;\n  times(A: D, B: D): D;\n  toValue(data: D, delta?: number, customTerms?: V[]): V;\n}\n","import { DimensionError } from \"../../../error/dimensionError\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { copy } from \"../../../utils/array\";\nimport { initMatrix, matrixMult } from \"../../../utils/matrix\";\nimport { Matrix } from \"../../../type/matrix\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\n\n/*\nK = 4\n    2c-b   2b-a  a-b-c-d [      d     c       b         a] z  2z-d 4z-2d-c\n         2c+b-a    b-c-d [  a-b-c   c+d     b+c       a+b]\n                     c-d [    b-c   a-b   b+c+d     a+b+c]\n                       d [      c     b       a   a+b+c+d]\n\nK = 5\n    2d-c   2c-b     2b-a a-b-c-d-e [      e     d     c       b         a] z  2z-e 4z-2e-d 8z-4e-2d-c\n         2d+c-b   2c+b-a   b-c-d-e [a-b-c-d   d+e   c+d     b+c       a+b]\n                2d+c+b-a     c-d-e [  b-c-d a-b-c c+d+e   b+c+d     a+b+c]\n                               d-e [    c-d   b-c   a-b b+c+d+e   a+b+c+d]\n                                 e [      d     c     b       a a+b+c+d+e]\n*/\nexport class MatrixEncoding<T> implements Encoding<T, Matrix<T>> {\n  public readonly format = EncodingFormat.Matrix;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n\n    // Populate first row\n    let value = this._0;\n    const ops = this.ops;\n    matrix[0][0] = this._1;\n    for (let x = 1; x <= K; ++x) {\n      value = ops.plus(value, matrix[0][x - 1]);\n      matrix[0][x] = value;\n    }\n\n    // Populate subsequent rows\n    for (let y = 1; y <= K; ++y) {\n      matrix[y][0] = this._1;\n      for (let x = 1; x <= K; ++x) {\n        matrix[y][x] = ops.plus(matrix[y - 1][x - 1], matrix[0][x]);\n      }\n    }\n\n    return matrix;\n  }\n\n  genNegK(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    matrix[0][0] = this._2;\n    matrix[0].fill(this._0, 1, K);\n    matrix[0][K] = this._neg1;\n    for (let i = 1; i <= K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i - 1] = this._neg1;\n      matrix[i][i] = this._2;\n      matrix[i][K] = this._neg1;\n    }\n    matrix[K][K] = this._1;\n    return matrix;\n  }\n\n  genNegOne(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    for (let i = 0; i < K; ++i) {\n      matrix[i][0] = this._neg1;\n      matrix[i].fill(this._0, 1);\n      matrix[i][i + 1] = this._1;\n    }\n    matrix[K][0] = this._1;\n    matrix[K].fill(this._0, 1);\n    return matrix;\n  }\n\n  genOne(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    matrix[0].fill(this._0);\n    matrix[0][K] = this._1;\n    for (let i = 1; i <= K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i - 1] = this._1;\n      matrix[i][K] = this._1;\n    }\n    return matrix;\n  }\n\n  genZero(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    for (let i = 0; i < K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i] = this._1;\n    }\n    return matrix;\n  }\n\n  /*\n  get(A: Matrix<T>, y: number, x: number): T {\n    return A[y][x];\n  }\n  */\n\n  pow(A: Matrix<T>, n: T): Matrix<T> {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: Matrix<T> | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: Matrix<T>, delta: number): Matrix<T> {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    if (delta <= -K || delta > 0) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    delta = -delta;\n    const end = K - delta;\n    const matrix = initMatrix<T>(K);\n    for (let y = 0; y < K; ++y) {\n      matrix[y].fill(this._0, 0, delta);\n      copy(A[y], matrix[y], delta, 0, end);\n    }\n\n    for (const ops = this.ops; delta > 0; --delta) {\n      const term = matrix[0][delta];\n      for (let y = 1; y < K; ++y) {\n        matrix[y - 1][delta - 1] = ops.minus(matrix[y][delta], term);\n      }\n      matrix[K - 1][delta - 1] = term;\n    }\n\n    return matrix;\n  }\n\n  square(A: Matrix<T>): Matrix<T> {\n    return this.times(A, A);\n  }\n\n  times(A: Matrix<T>, B: Matrix<T>): Matrix<T> {\n    return matrixMult(A, B, this.ops, this._0);\n  }\n\n  toValue(data: Matrix<T>, delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return data[0][x];\n    }\n    if (terms.length !== K) {\n      throw new DimensionError(K, terms.length);\n    }\n    let val = this._0;\n    for (let y = 0; y < K; ++y) {\n      const temp = this.ops.times(terms[y], data[y][x]);\n      val = this.ops.plus(val, temp);\n    }\n    return val;\n  }\n}\n","import { DimensionError } from \"../../../error/dimensionError\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\n\nexport class RevSumEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.RevSum;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._1);\n    for (let i = K - 2; i > 0; --i) {\n      mat[i - 1] = this.ops.plus(mat[i], mat[i]);\n    }\n    for (let i = 1; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._neg1);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[Math.max(0, K - 2)] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    return new Array<T>(K).fill(this._1);\n  }\n\n  genZero(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  get(A: T[], y: number, x: number): T {\n    const K = A.length - ++x;\n\n    let value: T;\n    if (y < x) {\n      value = A[K + y];\n    } else {\n      const z = y - x;\n      value = A[z - 1] ?? this._0;\n      value = this.ops.minus(A[z], value);\n      value = this.ops.plus(A[z], value);\n    }\n\n    return this.ops.minus(value, A[K - 1] ?? this._0);\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    const B = new Array<T>(K);\n    for (let y = 0; y < K; ++y) {\n      B[y] = this.get(A, y, x);\n    }\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    const K = A.length;\n    if (K !== B.length) {\n      throw new DimensionError(K, B.length);\n    }\n\n    const C = new Array<T>(K);\n    for (let m = 0; m < K; ++m) {\n      let value = this._0;\n      for (let n = 0; n < K; ++n) {\n        const temp = this.ops.times(this.get(A, m, n), B[n]);\n        value = this.ops.plus(value, temp);\n      }\n      C[m] = value;\n    }\n\n    return C;\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return this.get(data, 0, x);\n    }\n    if (terms.length !== K) {\n      throw new DimensionError(K, terms.length);\n    }\n    let value = this._0;\n    for (let y = 0; y < K; ++y) {\n      const temp = this.ops.times(this.get(data, y, x), terms[y]);\n      value = this.ops.plus(value, temp);\n    }\n    return value;\n  }\n}\n","import { DimensionError } from \"../../../error/dimensionError\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\n\nexport class SumEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.Sum;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K);\n    if (K < 1) {\n      return mat;\n    }\n    mat[0] = this._1;\n    for (let i = 1; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i - 1], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._2);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 1) {\n      mat[0] = this._neg1;\n    } else if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genZero(K: number): T[] {\n    return new Array<T>(K).fill(this._1);\n  }\n\n  get(A: T[], y: number, x: number): T {\n    if (y < x) {\n      return this.ops.minus(A[x], A[x - 1 - y]);\n    }\n    if (y === x) {\n      return A[x];\n    }\n    const z = A.length - 1 - y + x;\n    let res = this.ops.plus(A[z], A[z]);\n    res = this.ops.minus(A[z + 1], res);\n    res = this.ops.plus(res, A[x]);\n    return res;\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n    const K = A.length - 1;\n    const x = K + 1 + delta;\n    if (x <= 0 || x > K) {\n      throw new OutOfBoundsError(delta, -K, 0, \"delta\");\n    }\n    const util = this.ops;\n    const B = new Array<T>(K + 1);\n    const v = util.times(this._2, this.get(A, 0, x));\n    for (let y = 0; y <= K; ++y) {\n      B[y] = util.minus(v, this.get(A, K - y, x));\n    }\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    const K = A.length;\n    if (K !== B.length) {\n      throw new DimensionError(K, B.length);\n    }\n\n    const C = new Array<T>(K);\n    for (let m = 0; m < K; ++m) {\n      let val = this._0;\n      for (let n = 0; n < K; ++n) {\n        const temp = this.ops.times(this.get(A, m, n), this.get(B, n, m));\n        val = this.ops.plus(val, temp);\n      }\n      C[m] = val;\n    }\n    return C;\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return this.get(data, 0, x);\n    }\n    if (terms.length !== K) {\n      throw new DimensionError(K, terms.length);\n    }\n    let val = this._0;\n    for (let y = 0; y < K; ++y) {\n      const temp = this.ops.times(terms[y], this.get(data, y, x));\n      val = this.ops.plus(val, temp);\n    }\n    return val;\n  }\n}\n","import { initMatrix, matrixMult } from \"../../../utils/matrix\";\nimport { Matrix } from \"../../../type/matrix\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { DimensionError } from \"../../../error/dimensionError\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\nimport { Ops } from \"../../../ops/ops\";\nimport { getSum } from \"../../../utils/array\";\n\nexport class TermEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.Term;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._1);\n    for (let i = 2; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i - 1], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K >= 2) {\n      mat[0] = this._2;\n      mat[K - 1] = this._neg1;\n    } else if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[0] = this._neg1;\n      mat[Math.min(1, K - 1)] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genZero(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    delta = -delta;\n    const B = Array.from(A);\n    B.copyWithin(delta, 0);\n\n    let sum = getSum(A, this.ops) ?? this._0;\n    for (let i = K - 1; delta > 0; --i) {\n      let newValue = this.ops.plus(A[i], A[i]);\n      newValue = this.ops.minus(newValue, sum);\n      B[--delta] = newValue;\n      sum = A[i];\n    }\n\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    return matrixMult([A], toMatrix(B, this.ops), this.ops)[0];\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return data[x];\n    }\n    if (terms.length !== K) {\n      throw new DimensionError(K, terms.length);\n    }\n    let value = this._0;\n    const mat = toMatrix(data, this.ops);\n    for (let y = 0; y < K; ++y) {\n      const temp = this.ops.times(terms[y], mat[y][x]);\n      value = this.ops.plus(value, temp);\n    }\n    return value;\n  }\n}\n\nfunction toMatrix<T>(arr: T[], ops: Ops<T>): Matrix<T> {\n  const N = arr.length;\n  const mat = initMatrix<T>(N);\n\n  if (N < 1) {\n    return mat;\n  }\n\n  mat[N - 1] = arr.slice(1);\n  for (let y = N - 2; y > 0; --y) {\n    for (let x = 0; x < y; ++x) {\n      mat[y][x] = ops.minus(mat[y + 1][x + 1], arr[x + 1]);\n    }\n  }\n\n  mat[0] = Array.from(arr);\n  for (let y = 1; y < N; ++y) {\n    for (let x = y; x < N; ++x) {\n      mat[y][x] = ops.plus(mat[y - 1][x - 1], arr[x]);\n    }\n  }\n\n  return mat;\n}\n","import { Ops } from \"./ops\";\n\nexport class BigOps implements Ops<bigint> {\n  cast(a: bigint | boolean | number | string): bigint {\n    return BigInt(a);\n  }\n  dividedBy(a: bigint, b: bigint): bigint {\n    return a / b;\n  }\n  equal(a: bigint, b: bigint): boolean {\n    return a == b;\n  }\n  half(a: bigint): bigint {\n    return a >> 1n;\n  }\n  isOdd(a: bigint): boolean {\n    return (a & 1n) === 1n;\n  }\n  larger(a: bigint, b: bigint): boolean {\n    return a > b;\n  }\n  largerEq(a: bigint, b: bigint): boolean {\n    return a >= b;\n  }\n  minus(a: bigint, b: bigint): bigint {\n    return a - b;\n  }\n  minus1(a: bigint): bigint {\n    return a - 1n;\n  }\n  mod(a: bigint, b: bigint): bigint {\n    return a % b;\n  }\n  negative(a: bigint): bigint {\n    return -a;\n  }\n  plus(a: bigint, b: bigint): bigint {\n    return a + b;\n  }\n  plus1(a: bigint): bigint {\n    return a + 1n;\n  }\n  sign(a: bigint): number {\n    return a < 0n ? -1 : +(a > 0n);\n  }\n  smaller(a: bigint, b: bigint): boolean {\n    return a < b;\n  }\n  smallerEq(a: bigint, b: bigint): boolean {\n    return a <= b;\n  }\n  square(a: bigint): bigint {\n    return a ** 2n;\n  }\n  times(a: bigint, b: bigint): bigint {\n    return a * b;\n  }\n  toNumber(a: bigint): number {\n    return Number(a);\n  }\n  trunc(a: bigint): bigint {\n    return a;\n  }\n}\n","import { Ops } from \"./ops\";\n\nexport class NumOps implements Ops<number> {\n  cast(a: unknown): number {\n    return Number(a);\n  }\n  dividedBy(a: number, b: number): number {\n    return a / b;\n  }\n  equal(a: number, b: number): boolean {\n    return a == b;\n  }\n  half(a: number): number {\n    return a * 0.5;\n  }\n  isOdd(a: number): boolean {\n    return (a & 1) === 1;\n  }\n  larger(a: number, b: number): boolean {\n    return a > b;\n  }\n  largerEq(a: number, b: number): boolean {\n    return a >= b;\n  }\n  minus(a: number, b: number): number {\n    return a - b;\n  }\n  minus1(a: number): number {\n    return a - 1;\n  }\n  mod(a: number, b: number): number {\n    return a % b;\n  }\n  negative(a: number): number {\n    return -a;\n  }\n  plus(a: number, b: number): number {\n    return a + b;\n  }\n  plus1(a: number): number {\n    return a + 1;\n  }\n  sign(a: number): number {\n    return a < 0 ? -1 : +(a > 0);\n  }\n  smaller(a: number, b: number): boolean {\n    return a < b;\n  }\n  smallerEq(a: number, b: number): boolean {\n    return a <= b;\n  }\n  square(a: number): number {\n    return a ** 2;\n  }\n  times(a: number, b: number): number {\n    return a * b;\n  }\n  toNumber(a: number): number {\n    return a;\n  }\n  trunc(a: number): number {\n    return Math.trunc(a);\n  }\n}\n","import { trySafe } from \"../utils/try\";\nimport { Ops } from \"./ops\";\n\nexport class SafeNumOps implements Ops<number> {\n  cast(a: unknown): number {\n    return trySafe(Number(a));\n  }\n  dividedBy(a: number, b: number): number {\n    return trySafe(a / b);\n  }\n  equal(a: number, b: number): boolean {\n    return a == b;\n  }\n  half(a: number): number {\n    return a * 0.5;\n  }\n  isOdd(a: number): boolean {\n    return (a & 1) === 1;\n  }\n  larger(a: number, b: number): boolean {\n    return a > b;\n  }\n  largerEq(a: number, b: number): boolean {\n    return a >= b;\n  }\n  minus(a: number, b: number): number {\n    return trySafe(a - b);\n  }\n  minus1(a: number): number {\n    return trySafe(a - 1);\n  }\n  mod(a: number, b: number): number {\n    return a % b;\n  }\n  negative(a: number): number {\n    return trySafe(-a);\n  }\n  plus(a: number, b: number): number {\n    return trySafe(a + b);\n  }\n  plus1(a: number): number {\n    return trySafe(a + 1);\n  }\n  sign(a: number): number {\n    return a < 0n ? -1 : +(a > 0n);\n  }\n  smaller(a: number, b: number): boolean {\n    return a < b;\n  }\n  smallerEq(a: number, b: number): boolean {\n    return a <= b;\n  }\n  square(a: number): number {\n    return trySafe(a ** 2);\n  }\n  times(a: number, b: number): number {\n    return trySafe(a * b);\n  }\n  toNumber(a: number): number {\n    return a;\n  }\n  trunc(a: number): number {\n    return Math.trunc(a);\n  }\n}\n","import { BigOps } from \"../../ops/bigOps\";\nimport { SumEncoding } from \"../encoding\";\nimport { Generator } from \"../gen\";\nimport { KPowerGen } from \"../gen/kPowerGen\";\n\nexport class BigKbonacci implements Generator<bigint, bigint> {\n  private customs: bigint[];\n  private gen: KPowerGen<bigint, bigint>;\n\n  constructor(K: number, customs?: bigint[], cached = true) {\n    const ops = new BigOps();\n    const encoding = new SumEncoding(ops);\n    this.customs = customs ?? [];\n    this.gen = new KPowerGen(K, { cached, customs, encoding, ops });\n  }\n\n  get K(): number {\n    return this.gen.K;\n  }\n\n  get(index: bigint): bigint {\n    return this.gen.get(index);\n  }\n\n  getCached(): boolean {\n    return this.gen.getCached();\n  }\n\n  getCustoms(): bigint[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.gen.setCached(value);\n  }\n}\n","import { BigKbonacci } from \"./bigKbonacci\";\n\nexport class BigFibonacci extends BigKbonacci {\n  constructor(customs?: bigint[], cached?: boolean) {\n    super(2, customs, cached);\n  }\n}\n","import { BigKbonacci } from \"./bigKbonacci\";\n\nexport class BigTribonacci extends BigKbonacci {\n  constructor(customs?: bigint[], cached?: boolean) {\n    super(3, customs, cached);\n  }\n}\n","import { SafeNumOps } from \"../../ops\";\nimport { Generator } from \"../gen/generator\";\nimport { SumEncoding } from \"../encoding\";\nimport { KPowerGen } from \"../gen\";\n\nexport class Kbonacci implements Generator<number, number> {\n  private customs: number[];\n  private gen: KPowerGen<number, number>;\n\n  constructor(K: number, customs?: number[], cached = true) {\n    const ops = new SafeNumOps();\n    const encoding = new SumEncoding(ops);\n    this.customs = customs ?? [];\n    this.gen = new KPowerGen(K, { cached, customs, encoding, ops });\n  }\n\n  get K(): number {\n    return this.gen.K;\n  }\n\n  get(index: number): number {\n    return this.gen.get(index);\n  }\n\n  getCached(): boolean {\n    return this.gen.getCached();\n  }\n\n  getCustoms(): number[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.gen.setCached(value);\n  }\n}\n","import { Kbonacci } from \"./kbonacci\";\n\nexport class Fibonacci extends Kbonacci {\n  constructor(customs?: number[], cached?: boolean) {\n    super(2, customs, cached);\n  }\n}\n","import { Kbonacci } from \"./kbonacci\";\n\nexport class Tribonacci extends Kbonacci {\n  constructor(customs?: number[], cached?: boolean) {\n    super(3, customs, cached);\n  }\n}\n"],"names":["copy","A","B","target","start","end","getSum","arr","ops","N","value","i","padStart","array","targetLength","padValue","DimensionError","actual","expected","relation","a","b","IntegerError","label","OutOfBoundsError","min","max","msg","message","K_MIN","SAFE_MAX","SAFE_MIN","UnsafeError","isInteger","isSafeNumber","tryK","K","tryNumTerms","maxLen","terms","trySafe","n","Powers","keyOps","valOps","cached","__publicField","pows","KPowerGen","config","customs","encoding","indexOps","valueOps","iOps","T","data","delta","mod","vOps","PowerGen","one","SlidingWindowGen","_0","_1","maxN","temp","newValue","initMatrix","Y","X","matrix","matrixMult","zero","M","_a","P","_b","C","p","val","EncodingFormat","MatrixEncoding","x","y","rem","term","RevSumEncoding","mat","z","m","SumEncoding","res","util","v","TermEncoding","sum","toMatrix","BigOps","NumOps","SafeNumOps","BigKbonacci","index","BigFibonacci","BigTribonacci","Kbonacci","Fibonacci","Tribonacci"],"mappings":"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"}