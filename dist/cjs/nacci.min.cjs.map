{"version":3,"file":"nacci.min.cjs","sources":["../../src/error/dimensionError.ts","../../src/error/integerError.ts","../../src/error/outOfBoundsError.ts","../../src/globals.ts","../../src/error/unsafeError.ts","../../src/utils/is.ts","../../src/utils/try.ts","../../src/utils/powers.ts","../../src/kbonacci/gen/kPowerGen.ts","../../src/kbonacci/gen/powerGen.ts","../../src/utils/array.ts","../../src/kbonacci/gen/slidingWindowGen.ts","../../src/utils/matrix.ts","../../src/kbonacci/encoding/encoding.ts","../../src/kbonacci/encoding/matrix/matrixEncoding.ts","../../src/kbonacci/encoding/revSum/revSumEncoding.ts","../../src/kbonacci/encoding/sum/sumEncoding.ts","../../src/kbonacci/encoding/term/termEncoding.ts","../../src/ops/bigOps.ts","../../src/ops/numOps.ts","../../src/ops/safeNumOps.ts","../../src/kbonacci/wrapper/bigKbonacci.ts","../../src/kbonacci/wrapper/bigFibonacci.ts","../../src/kbonacci/wrapper/bigTribonacci.ts","../../src/kbonacci/wrapper/kbonacci.ts","../../src/kbonacci/wrapper/fibonacci.ts","../../src/kbonacci/wrapper/tribonacci.ts"],"sourcesContent":["export class DimensionError extends RangeError {\n  constructor(\n    actual: number | number[],\n    expected: number | number[],\n    relation = \"!=\"\n  ) {\n    const a = Array.isArray(actual) ? actual.join(\"x\") : `${actual}`;\n    const b = Array.isArray(expected) ? expected.join(\"x\") : `${expected}`;\n    super(`Dimension mismatch. ${a} ${relation} ${b}`);\n  }\n}\n","export class IntegerError extends TypeError {\n  constructor(value: unknown, label = \"Value\") {\n    super(`Not an integer. ${label}: ${String(value)}`);\n  }\n}\n","export class OutOfBoundsError extends RangeError {\n  constructor(\n    actual: unknown,\n    min?: unknown,\n    max?: unknown,\n    label = \"index\",\n    msg = \"Out of bounds\"\n  ) {\n    const message = [msg];\n    if (min != null || max != null) {\n      message.push(`. Expected`);\n      if (min != null) {\n        message.push(` ${String(min)} <=`);\n      }\n      message.push(` ${label}`);\n      if (max != null) {\n        message.push(` <= ${String(max)}`);\n      }\n    }\n    message.push(`. ${label}: ${String(actual)}`);\n    super(message.join(\"\"));\n  }\n}\n","export const K_MIN = 2;\nexport const SAFE_MAX = Number.MAX_SAFE_INTEGER;\nexport const SAFE_MIN = Number.MIN_SAFE_INTEGER;\n","import { SAFE_MAX, SAFE_MIN } from \"../globals\";\nimport { OutOfBoundsError } from \"./outOfBoundsError\";\n\nexport class UnsafeError extends OutOfBoundsError {\n  constructor(actual: number) {\n    super(actual, SAFE_MIN, SAFE_MAX, \"value\", \"Unsafe value\");\n  }\n}\n","import { SAFE_MIN, SAFE_MAX } from \"../globals\";\n\nexport function isBigInt(value: unknown): value is bigint {\n  return typeof value === \"bigint\";\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value: unknown): value is Function {\n  return typeof value === \"function\";\n}\n\nexport function isInteger(value: unknown): value is number {\n  return Number.isInteger(value);\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === \"number\";\n}\n\nexport function isSafeNumber(value: number): boolean {\n  return value >= SAFE_MIN && value <= SAFE_MAX;\n}\n","import { DimensionError } from \"../error/dimensionError\";\nimport { IntegerError } from \"../error/integerError\";\nimport { OutOfBoundsError } from \"../error/outOfBoundsError\";\nimport { UnsafeError } from \"../error/unsafeError\";\nimport { K_MIN } from \"../globals\";\nimport { isInteger, isSafeNumber } from \"./is\";\n\nexport function tryInteger<T>(n: T): T {\n  if (!isInteger(n)) {\n    throw new IntegerError(n);\n  }\n  return n;\n}\n\nexport function tryK(K: number): number {\n  if (!isInteger(K)) {\n    throw new IntegerError(K, \"K\");\n  }\n  if (K < K_MIN) {\n    throw new OutOfBoundsError(K, K_MIN, undefined, \"K\");\n  }\n  return K;\n}\n\nexport function tryNumTerms<T>(maxLen: number, terms: T[]): T[] {\n  if (terms.length > maxLen) {\n    throw new DimensionError(terms.length, maxLen, \"<=\");\n  }\n  return terms;\n}\n\nexport function trySafe(n: number): number {\n  if (!isSafeNumber(n)) {\n    throw new UnsafeError(n);\n  }\n  return n;\n}\n","import { OutOfBoundsError } from \"../error/outOfBoundsError\";\nexport interface KeyOps<T> {\n  cast(value: unknown): T;\n  equal(a: T, b: T): boolean;\n  half(a: T): T;\n  isOdd(a: T): boolean;\n  sign(a: T): number;\n  trunc(a: T): T;\n}\n\nexport interface ValueOps<T> {\n  times(a: T, b: T): T;\n  square(a: T): T;\n}\n\nexport class Powers<K, V> {\n  protected cached: boolean;\n  protected keyOps: KeyOps<K>;\n  protected valOps: ValueOps<V>;\n  protected pows: V[];\n\n  constructor(value: V, keyOps: KeyOps<K>, valOps: ValueOps<V>, cached = true) {\n    this.cached = cached;\n    this.keyOps = keyOps;\n    this.pows = [value];\n    this.valOps = valOps;\n  }\n\n  get size(): number {\n    return this.pows.length;\n  }\n\n  clear(): void {\n    this.pows.length = 1;\n  }\n\n  get(N: K): V {\n    const keyOps = this.keyOps;\n    const valOps = this.valOps;\n\n    const pows = this.cached ? this.pows : [this.pows[0]];\n    let value: V | undefined = undefined;\n\n    for (let i = 0; keyOps.sign(N) > 0; ++i) {\n      if (pows[i] == null) {\n        pows[i] = valOps.square(pows[i - 1]);\n      }\n      if (keyOps.isOdd(N)) {\n        if (value == null) {\n          value = pows[i];\n        } else {\n          value = valOps.times(value, pows[i]);\n        }\n      }\n      N = keyOps.trunc(keyOps.half(N));\n    }\n\n    if (value == null) {\n      throw new OutOfBoundsError(N, keyOps.cast(1));\n    }\n\n    return value;\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  setCached(cached: boolean): void {\n    this.cached = cached;\n    if (!cached) {\n      this.clear();\n    }\n  }\n\n  setValue(value: V): void {\n    if (value !== this.pows[0]) {\n      this.pows = [value];\n      this.clear();\n    }\n  }\n}\n","import { Generator } from \"./generator\";\nimport { Ops } from \"../../ops/ops\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Powers } from \"../../utils/powers\";\nimport { Encoding } from \"../encoding/encoding\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class KPowerGen<K, V> implements Generator<K, V> {\n  private cached: boolean;\n  private customs: V[];\n  private encoding: Encoding<V, unknown>;\n  private indexOps: Ops<K>;\n  private isStd: boolean;\n  private _K: number;\n  private neg: Powers<K, unknown>;\n  private pos: Powers<K, unknown>;\n  private v0: V;\n  private zero: unknown;\n\n  constructor(K: number, config: GenConfig<K, V, unknown>) {\n    tryK(K);\n\n    const cached = config.cached ?? true;\n    const customs = config.customs ?? [];\n    const encoding = config.encoding;\n    const indexOps = config.indexOps ?? config.ops;\n    if (encoding == null) {\n      throw new TypeError(`Missing encoding`);\n    }\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n\n    this.cached = cached;\n    this.customs = customs;\n    this.encoding = encoding;\n    this.indexOps = indexOps;\n    this.isStd = false;\n    this._K = K;\n    this.neg = new Powers(encoding.genNegK(K), indexOps, encoding, cached);\n    this.pos = new Powers(encoding.genK(K), indexOps, encoding, cached);\n    this.zero = encoding.genZero(K);\n    this.v0 = encoding.toValue(this.zero, 0);\n    this.setCustoms(customs);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    const iOps = this.indexOps;\n\n    const T = iOps.cast(this.customs.length - 1);\n    if (iOps.sign(N) >= 0 && iOps.smallerEq(N, T)) {\n      return this.customs[iOps.toNumber(N)];\n    }\n\n    let data: unknown;\n    let delta: K;\n\n    N = iOps.minus(N, T);\n    const K = iOps.cast(this.K);\n    if (iOps.sign(N) > 0) {\n      const mod = iOps.mod(iOps.minus1(N), K);\n      delta = iOps.minus1(K);\n      N = iOps.trunc(iOps.dividedBy(N, K));\n      N = iOps.equal(mod, delta) ? N : iOps.plus1(N);\n      delta = iOps.plus(iOps.negative(delta), mod);\n      data = this.pos.get(N);\n    } else if (iOps.larger(N, iOps.negative(K))) {\n      delta = N;\n      data = this.zero;\n    } else {\n      delta = iOps.mod(N, K);\n      N = iOps.negative(N);\n      N = iOps.trunc(iOps.dividedBy(N, K));\n      data = this.neg.get(N);\n    }\n\n    const customs = this.isStd ? undefined : this.customs;\n    return this.encoding.toValue(data, iOps.toNumber(delta), customs);\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  getCustoms(): V[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.cached = value;\n    this.neg.setCached(value);\n    this.pos.setCached(value);\n  }\n\n  setCustoms(customs?: V[]): void {\n    if (customs == null || customs.length < 1) {\n      this.isStd = true;\n      this.customs = [this.v0];\n    } else {\n      tryNumTerms(this.K, customs);\n      this.isStd = false;\n      this.customs = customs;\n    }\n  }\n}\n","import { Ops } from \"../../ops/ops\";\nimport { Generator } from \"./generator\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Powers } from \"../../utils/powers\";\nimport { Encoding } from \"../encoding/encoding\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class PowerGen<K, V> implements Generator<K, V> {\n  private cached: boolean;\n  private customs: V[];\n  private encoding: Encoding<V, unknown>;\n  private indexOps: Ops<K>;\n  private isStd: boolean;\n  private _K: number;\n  private neg: Powers<K, unknown>;\n  private pos: Powers<K, unknown>;\n  private v0: V;\n\n  constructor(K: number, config: GenConfig<K, V, unknown>) {\n    tryK(K);\n\n    const cached = config.cached ?? true;\n    const customs = config.customs ?? [];\n    const encoding = config.encoding;\n    const indexOps = config.indexOps ?? config.ops;\n    if (encoding == null) {\n      throw new TypeError(`Missing encoding`);\n    }\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n\n    this.cached = cached;\n    this.customs = [];\n    this.encoding = encoding;\n    this.indexOps = indexOps;\n    this.isStd = false;\n    this._K = K;\n    this.neg = new Powers(encoding.genNegOne(K), indexOps, encoding, cached);\n    const one = encoding.genOne(K);\n    this.pos = new Powers(one, indexOps, encoding, cached);\n    this.v0 = encoding.toValue(one, -1);\n    this.setCustoms(customs);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    const iOps = this.indexOps;\n\n    const T = iOps.cast(this.customs.length - 1);\n    if (iOps.sign(N) >= 0 && iOps.smallerEq(N, T)) {\n      return this.customs[iOps.toNumber(N)];\n    }\n\n    N = iOps.minus(N, T);\n    const data =\n      iOps.sign(N) > 0 ? this.pos.get(N) : this.neg.get(iOps.negative(N));\n\n    const customs = this.isStd ? undefined : this.customs;\n    return this.encoding.toValue(data, 0, customs);\n  }\n\n  getCached(): boolean {\n    return this.cached;\n  }\n\n  getCustoms(): V[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.cached = value;\n    this.neg.setCached(value);\n    this.pos.setCached(value);\n  }\n\n  setCustoms(customs?: V[]): void {\n    if (customs == null || customs.length < 1) {\n      this.isStd = true;\n      this.customs = [this.v0];\n    } else {\n      tryNumTerms(this.K, customs);\n      this.isStd = false;\n      this.customs = customs;\n    }\n  }\n}\n","import { Ops } from \"../ops/ops\";\n\nexport function copy<T>(\n  A: T[],\n  B: T[],\n  target = 0,\n  start = 0,\n  end = A.length\n): T[] {\n  if (A === B) {\n    return A.copyWithin(target, start, end);\n  }\n  if (target < 0) {\n    target = Math.max(0, B.length + target);\n  }\n  if (start < 0) {\n    start = Math.max(0, A.length + start);\n  }\n  if (end < 0) {\n    end = Math.max(0, A.length + end);\n  }\n  end = start + Math.max(0, Math.min(B.length - target, end - start));\n  while (start < end) {\n    B[target++] = A[start++];\n  }\n  return B;\n}\n\nexport function getSum<T>(arr: T[], ops: Ops<T>): T | undefined {\n  const N = arr.length;\n  if (N < 1) {\n    return undefined;\n  }\n  let value = arr[0];\n  for (let i = 1; i < N; ++i) {\n    value = ops.plus(value, arr[i]);\n  }\n  return value;\n}\n\nexport function padStart<T>(\n  array: T[],\n  targetLength: number,\n  padValue: T\n): void {\n  if (targetLength <= array.length) {\n    return;\n  }\n  const N = array.length;\n  const i = targetLength - N;\n  array.length = targetLength;\n  array.fill(padValue, N, i);\n  array.copyWithin(i, 0, N);\n  array.fill(padValue, 0, Math.min(i, N));\n}\n","import { padStart } from \"../../utils/array\";\nimport { tryK, tryNumTerms } from \"../../utils/try\";\nimport { Generator } from \"./generator\";\nimport { Ops } from \"../../ops/ops\";\nimport { getSum } from \"../../utils/array\";\nimport { GenConfig } from \"./genConfig\";\n\nexport class SlidingWindowGen<K, V> implements Generator<K, V> {\n  private delta: number;\n  private indexOps: Ops<K>;\n  private _K: number;\n  private minN: K;\n  private next: V;\n  private valueOps: Ops<V>;\n  private values: V[];\n\n  constructor(K: number, config: GenConfig<K, V, never>) {\n    tryK(K);\n\n    let customs = config.customs ?? [];\n    const indexOps = config.indexOps ?? config.ops;\n    const valueOps = config.valueOps ?? config.ops;\n    if (indexOps == null) {\n      throw new TypeError(`Missing index operations`);\n    }\n    if (valueOps == null) {\n      throw new TypeError(`Missing value operations`);\n    }\n\n    const _0 = valueOps.cast(0);\n    if (customs == null || customs.length < 1) {\n      const _1 = valueOps.cast(1);\n      customs = [_0, _1];\n    } else {\n      tryNumTerms(K, customs);\n    }\n\n    // Initialize properties\n    this.delta = 0;\n    this.indexOps = indexOps;\n    this._K = K;\n    this.valueOps = valueOps;\n    this.minN = indexOps.minus(indexOps.cast(customs.length), indexOps.cast(K));\n    this.next = getSum(customs, valueOps) ?? _0;\n    this.values = Array.from(customs);\n    padStart(this.values, K, _0);\n  }\n\n  get K(): number {\n    return this._K;\n  }\n\n  get(N: K): V {\n    // Shift window\n    const ops = this.indexOps;\n    if (ops.smaller(N, this.minN)) {\n      this.reverse(ops.minus(this.minN, N));\n    } else {\n      const maxN = ops.plus(this.minN, ops.cast(this.K));\n      if (ops.largerEq(N, maxN)) {\n        this.forward(ops.plus1(ops.minus(N, maxN)));\n      }\n    }\n\n    // Return value\n    const i = ops.plus(ops.minus(N, this.minN), ops.cast(this.delta));\n    return this.values[ops.toNumber(i) % this.K];\n  }\n\n  private forward(i: K): void {\n    const iOps = this.indexOps;\n    const vOps = this.valueOps;\n\n    while (iOps.sign(i) > 0) {\n      const temp = this.values[this.delta];\n      this.values[this.delta] = this.next;\n      this.next = vOps.plus(this.next, vOps.minus(this.next, temp));\n      this.delta = (this.delta + 1) % this.K;\n      this.minN = iOps.plus1(this.minN);\n      i = iOps.minus1(i);\n    }\n  }\n\n  private reverse(i: K): void {\n    const iOps = this.indexOps;\n    const vOps = this.valueOps;\n\n    while (iOps.sign(i) > 0) {\n      const delta = (this.delta - 1 + this.K) % this.K;\n      const value = this.values[delta];\n      const newValue = vOps.plus(vOps.minus(value, this.next), value);\n      this.minN = iOps.minus1(this.minN);\n      this.next = value;\n      this.delta = delta;\n      this.values[delta] = newValue;\n      i = iOps.minus1(i);\n    }\n  }\n}\n","import { DimensionError } from \"../error/dimensionError\";\nimport { Ops } from \"../ops/ops\";\nimport { Matrix } from \"../type/matrix\";\n\nexport function fillMatrix<T>(matrix: Matrix<T>, value: T): void {\n  const M = matrix.length;\n  for (let m = 0; m < M; ++m) {\n    matrix[m].fill(value);\n  }\n}\n\nexport function initMatrix<T>(Y: number, X = Y): Matrix<T> {\n  const matrix = new Array<T[]>(Y);\n  for (let i = 0; i < Y; ++i) {\n    matrix[i] = new Array<T>(X);\n  }\n  return matrix;\n}\n\nexport function matrixMult<T>(\n  A: Matrix<T>,\n  B: Matrix<T>,\n  ops: Ops<T>,\n  zero: T = ops.cast(0)\n): Matrix<T> {\n  const M = A.length;\n  const N = A[0]?.length ?? 0;\n  const P = B[0]?.length ?? 0;\n  if (N !== B.length) {\n    throw new DimensionError([M, N], [B.length, P]);\n  }\n\n  const C = initMatrix<T>(M, P);\n  for (let m = 0; m < M; ++m) {\n    for (let p = 0; p < P; ++p) {\n      let val = zero;\n      for (let n = 0; n < N; ++n) {\n        const temp = ops.times(A[m][n], B[n][p]);\n        val = ops.plus(val, temp);\n      }\n      C[m][p] = val;\n    }\n  }\n\n  return C;\n}\n","export const EncodingFormat = {\n  Matrix: \"mat\",\n  RevSum: \"rsum\",\n  Sum: \"sum\",\n  Term: \"term\",\n} as const;\n\nexport interface Encoding<V, D = unknown> {\n  readonly format: string;\n  genK(K: number): D;\n  genNegK(K: number): D;\n  genNegOne(K: number): D;\n  genOne(K: number): D;\n  genZero(K: number): D;\n  pow(A: D, n: V): D;\n  shift(A: D, delta: number): D;\n  square(A: D): D;\n  times(A: D, B: D): D;\n  toValue(data: D, delta?: number, customTerms?: V[]): V;\n}\n","import { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { copy } from \"../../../utils/array\";\nimport { initMatrix, matrixMult } from \"../../../utils/matrix\";\nimport { Matrix } from \"../../../type/matrix\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\nimport { tryNumTerms } from \"../../../utils/try\";\n\n/*\nK = 4\n    2c-b   2b-a  a-b-c-d [      d     c       b         a] z  2z-d 4z-2d-c\n         2c+b-a    b-c-d [  a-b-c   c+d     b+c       a+b]\n                     c-d [    b-c   a-b   b+c+d     a+b+c]\n                       d [      c     b       a   a+b+c+d]\n\nK = 5\n    2d-c   2c-b     2b-a a-b-c-d-e [      e     d     c       b         a] z  2z-e 4z-2e-d 8z-4e-2d-c\n         2d+c-b   2c+b-a   b-c-d-e [a-b-c-d   d+e   c+d     b+c       a+b]\n                2d+c+b-a     c-d-e [  b-c-d a-b-c c+d+e   b+c+d     a+b+c]\n                               d-e [    c-d   b-c   a-b b+c+d+e   a+b+c+d]\n                                 e [      d     c     b       a a+b+c+d+e]\n*/\nexport class MatrixEncoding<T> implements Encoding<T, Matrix<T>> {\n  public readonly format = EncodingFormat.Matrix;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n\n    // Populate first row\n    let value = this._0;\n    const ops = this.ops;\n    matrix[0][0] = this._1;\n    for (let x = 1; x <= K; ++x) {\n      value = ops.plus(value, matrix[0][x - 1]);\n      matrix[0][x] = value;\n    }\n\n    // Populate subsequent rows\n    for (let y = 1; y <= K; ++y) {\n      matrix[y][0] = this._1;\n      for (let x = 1; x <= K; ++x) {\n        matrix[y][x] = ops.plus(matrix[y - 1][x - 1], matrix[0][x]);\n      }\n    }\n\n    return matrix;\n  }\n\n  genNegK(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    matrix[0][0] = this._2;\n    matrix[0].fill(this._0, 1, K);\n    matrix[0][K] = this._neg1;\n    for (let i = 1; i <= K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i - 1] = this._neg1;\n      matrix[i][i] = this._2;\n      matrix[i][K] = this._neg1;\n    }\n    matrix[K][K] = this._1;\n    return matrix;\n  }\n\n  genNegOne(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    for (let i = 0; i < K; ++i) {\n      matrix[i][0] = this._neg1;\n      matrix[i].fill(this._0, 1);\n      matrix[i][i + 1] = this._1;\n    }\n    matrix[K][0] = this._1;\n    matrix[K].fill(this._0, 1);\n    return matrix;\n  }\n\n  genOne(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    if (--K < 0) {\n      return matrix;\n    }\n    matrix[0].fill(this._0);\n    matrix[0][K] = this._1;\n    for (let i = 1; i <= K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i - 1] = this._1;\n      matrix[i][K] = this._1;\n    }\n    return matrix;\n  }\n\n  genZero(K: number): Matrix<T> {\n    const matrix = initMatrix<T>(K);\n    for (let i = 0; i < K; ++i) {\n      matrix[i].fill(this._0);\n      matrix[i][i] = this._1;\n    }\n    return matrix;\n  }\n\n  /*\n  get(A: Matrix<T>, y: number, x: number): T {\n    return A[y][x];\n  }\n  */\n\n  pow(A: Matrix<T>, n: T): Matrix<T> {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: Matrix<T> | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: Matrix<T>, delta: number): Matrix<T> {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    if (delta <= -K || delta > 0) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    delta = -delta;\n    const end = K - delta;\n    const matrix = initMatrix<T>(K);\n    for (let y = 0; y < K; ++y) {\n      matrix[y].fill(this._0, 0, delta);\n      copy(A[y], matrix[y], delta, 0, end);\n    }\n\n    for (const ops = this.ops; delta > 0; --delta) {\n      const term = matrix[0][delta];\n      for (let y = 1; y < K; ++y) {\n        matrix[y - 1][delta - 1] = ops.minus(matrix[y][delta], term);\n      }\n      matrix[K - 1][delta - 1] = term;\n    }\n\n    return matrix;\n  }\n\n  square(A: Matrix<T>): Matrix<T> {\n    return this.times(A, A);\n  }\n\n  times(A: Matrix<T>, B: Matrix<T>): Matrix<T> {\n    return matrixMult(A, B, this.ops, this._0);\n  }\n\n  toValue(data: Matrix<T>, delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return data[0][x];\n    }\n    tryNumTerms(K, terms);\n    let val = this._0;\n    const minY = K - terms.length;\n    for (let y = minY; y < K; ++y) {\n      const temp = this.ops.times(terms[y - minY], data[y][x]);\n      val = this.ops.plus(val, temp);\n    }\n    return val;\n  }\n}\n","import { DimensionError } from \"../../../error/dimensionError\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { tryNumTerms } from \"../../../utils/try\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\n\nexport class RevSumEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.RevSum;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._1);\n    for (let i = K - 2; i > 0; --i) {\n      mat[i - 1] = this.ops.plus(mat[i], mat[i]);\n    }\n    for (let i = 1; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._neg1);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[Math.max(0, K - 2)] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    return new Array<T>(K).fill(this._1);\n  }\n\n  genZero(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  get(A: T[], y: number, x: number): T {\n    const K = A.length - ++x;\n\n    let value: T;\n    if (y < x) {\n      value = A[K + y];\n    } else {\n      const z = y - x;\n      value = A[z - 1] ?? this._0;\n      value = this.ops.minus(A[z], value);\n      value = this.ops.plus(A[z], value);\n    }\n\n    return this.ops.minus(value, A[K - 1] ?? this._0);\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    const B = new Array<T>(K);\n    for (let y = 0; y < K; ++y) {\n      B[y] = this.get(A, y, x);\n    }\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    const K = A.length;\n    if (K !== B.length) {\n      throw new DimensionError(K, B.length);\n    }\n\n    const C = new Array<T>(K);\n    for (let m = 0; m < K; ++m) {\n      let value = this._0;\n      for (let n = 0; n < K; ++n) {\n        const temp = this.ops.times(this.get(A, m, n), B[n]);\n        value = this.ops.plus(value, temp);\n      }\n      C[m] = value;\n    }\n\n    return C;\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return this.get(data, 0, x);\n    }\n    tryNumTerms(K, terms);\n    let value = this._0;\n    const minY = K - terms.length;\n    for (let y = minY; y < K; ++y) {\n      const temp = this.ops.times(terms[y - minY], this.get(data, y, x));\n      value = this.ops.plus(value, temp);\n    }\n    return value;\n  }\n}\n","import { DimensionError } from \"../../../error/dimensionError\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { Ops } from \"../../../ops/ops\";\nimport { tryNumTerms } from \"../../../utils/try\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\n\nexport class SumEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.Sum;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K);\n    if (K < 1) {\n      return mat;\n    }\n    mat[0] = this._1;\n    for (let i = 1; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i - 1], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._2);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 1) {\n      mat[0] = this._neg1;\n    } else if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genZero(K: number): T[] {\n    return new Array<T>(K).fill(this._1);\n  }\n\n  get(A: T[], y: number, x: number): T {\n    if (y < x) {\n      return this.ops.minus(A[x], A[x - 1 - y]);\n    }\n    if (y === x) {\n      return A[x];\n    }\n    const z = A.length - 1 - y + x;\n    let res = this.ops.plus(A[z], A[z]);\n    res = this.ops.minus(A[z + 1], res);\n    res = this.ops.plus(res, A[x]);\n    return res;\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n    const K = A.length - 1;\n    const x = K + 1 + delta;\n    if (x <= 0 || x > K) {\n      throw new OutOfBoundsError(delta, -K, 0, \"delta\");\n    }\n    const util = this.ops;\n    const B = new Array<T>(K + 1);\n    const v = util.times(this._2, this.get(A, 0, x));\n    for (let y = 0; y <= K; ++y) {\n      B[y] = util.minus(v, this.get(A, K - y, x));\n    }\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    const K = A.length;\n    if (K !== B.length) {\n      throw new DimensionError(K, B.length);\n    }\n\n    const C = new Array<T>(K);\n    for (let m = 0; m < K; ++m) {\n      let val = this._0;\n      for (let n = 0; n < K; ++n) {\n        const temp = this.ops.times(this.get(A, m, n), this.get(B, n, m));\n        val = this.ops.plus(val, temp);\n      }\n      C[m] = val;\n    }\n    return C;\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return this.get(data, 0, x);\n    }\n    tryNumTerms(K, terms);\n    let val = this._0;\n    const minY = K - terms.length;\n    for (let y = minY; y < K; ++y) {\n      const temp = this.ops.times(terms[y - minY], this.get(data, y, x));\n      val = this.ops.plus(val, temp);\n    }\n    return val;\n  }\n}\n","import { initMatrix, matrixMult } from \"../../../utils/matrix\";\nimport { Matrix } from \"../../../type/matrix\";\nimport { OutOfBoundsError } from \"../../../error/outOfBoundsError\";\nimport { EncodingFormat, Encoding } from \"../encoding\";\nimport { Ops } from \"../../../ops/ops\";\nimport { getSum } from \"../../../utils/array\";\nimport { tryNumTerms } from \"../../../utils/try\";\n\nexport class TermEncoding<T> implements Encoding<T, T[]> {\n  public readonly format = EncodingFormat.Term;\n\n  private _neg1: T;\n  private _0: T;\n  private _1: T;\n  private _2: T;\n\n  constructor(private ops: Ops<T>) {\n    this._neg1 = ops.cast(-1);\n    this._0 = ops.cast(0);\n    this._1 = ops.cast(1);\n    this._2 = ops.cast(2);\n  }\n\n  genK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._1);\n    for (let i = 2; i < K; ++i) {\n      mat[i] = this.ops.plus(mat[i - 1], mat[i - 1]);\n    }\n    return mat;\n  }\n\n  genNegK(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K >= 2) {\n      mat[0] = this._2;\n      mat[K - 1] = this._neg1;\n    } else if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  genNegOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[0] = this._neg1;\n      mat[Math.min(1, K - 1)] = this._1;\n    }\n    return mat;\n  }\n\n  genOne(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[K - 1] = this._1;\n    }\n    return mat;\n  }\n\n  genZero(K: number): T[] {\n    const mat = new Array<T>(K).fill(this._0);\n    if (K > 0) {\n      mat[0] = this._1;\n    }\n    return mat;\n  }\n\n  pow(A: T[], n: T): T[] {\n    if (this.ops.smaller(n, this._1)) {\n      throw new OutOfBoundsError(n, this._1, undefined, \"N\");\n    }\n\n    let rem: T[] | undefined = undefined;\n    while (this.ops.larger(n, this._1)) {\n      if (this.ops.isOdd(n)) {\n        rem = rem == null ? A : this.times(rem, A);\n      }\n      A = this.times(A, A);\n      n = this.ops.half(n);\n      n = this.ops.trunc(n);\n    }\n\n    return rem == null ? A : this.times(rem, A);\n  }\n\n  shift(A: T[], delta: number): T[] {\n    if (delta === 0) {\n      return A;\n    }\n\n    const K = A.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n\n    delta = -delta;\n    const B = Array.from(A);\n    B.copyWithin(delta, 0);\n\n    let sum = getSum(A, this.ops) ?? this._0;\n    for (let i = K - 1; delta > 0; --i) {\n      let newValue = this.ops.plus(A[i], A[i]);\n      newValue = this.ops.minus(newValue, sum);\n      B[--delta] = newValue;\n      sum = A[i];\n    }\n\n    return B;\n  }\n\n  square(A: T[]): T[] {\n    return this.times(A, A);\n  }\n\n  times(A: T[], B: T[]): T[] {\n    return matrixMult([A], toMatrix(B, this.ops), this.ops)[0];\n  }\n\n  toValue(data: T[], delta = 0, terms?: T[]): T {\n    const K = data.length;\n    const x = K - 1 + delta;\n    if (x < 0 || x >= K) {\n      throw new OutOfBoundsError(delta, 1 - K, 0, \"delta\");\n    }\n    if (terms == null) {\n      return data[x];\n    }\n    tryNumTerms(K, terms);\n    let value = this._0;\n    const minY = K - terms.length;\n    const mat = toMatrix(data, this.ops);\n    for (let y = minY; y < K; ++y) {\n      const temp = this.ops.times(terms[y - minY], mat[y][x]);\n      value = this.ops.plus(value, temp);\n    }\n    return value;\n  }\n}\n\nfunction toMatrix<T>(arr: T[], ops: Ops<T>): Matrix<T> {\n  const N = arr.length;\n  const mat = initMatrix<T>(N);\n\n  if (N < 1) {\n    return mat;\n  }\n\n  mat[N - 1] = arr.slice(1);\n  for (let y = N - 2; y > 0; --y) {\n    for (let x = 0; x < y; ++x) {\n      mat[y][x] = ops.minus(mat[y + 1][x + 1], arr[x + 1]);\n    }\n  }\n\n  mat[0] = Array.from(arr);\n  for (let y = 1; y < N; ++y) {\n    for (let x = y; x < N; ++x) {\n      mat[y][x] = ops.plus(mat[y - 1][x - 1], arr[x]);\n    }\n  }\n\n  return mat;\n}\n","import { Ops } from \"./ops\";\n\nexport class BigOps implements Ops<bigint> {\n  cast(a: bigint | boolean | number | string): bigint {\n    return BigInt(a);\n  }\n  dividedBy(a: bigint, b: bigint): bigint {\n    return a / b;\n  }\n  equal(a: bigint, b: bigint): boolean {\n    return a == b;\n  }\n  half(a: bigint): bigint {\n    return a >> 1n;\n  }\n  isOdd(a: bigint): boolean {\n    return (a & 1n) === 1n;\n  }\n  larger(a: bigint, b: bigint): boolean {\n    return a > b;\n  }\n  largerEq(a: bigint, b: bigint): boolean {\n    return a >= b;\n  }\n  minus(a: bigint, b: bigint): bigint {\n    return a - b;\n  }\n  minus1(a: bigint): bigint {\n    return a - 1n;\n  }\n  mod(a: bigint, b: bigint): bigint {\n    return a % b;\n  }\n  negative(a: bigint): bigint {\n    return -a;\n  }\n  plus(a: bigint, b: bigint): bigint {\n    return a + b;\n  }\n  plus1(a: bigint): bigint {\n    return a + 1n;\n  }\n  sign(a: bigint): number {\n    return a < 0n ? -1 : +(a > 0n);\n  }\n  smaller(a: bigint, b: bigint): boolean {\n    return a < b;\n  }\n  smallerEq(a: bigint, b: bigint): boolean {\n    return a <= b;\n  }\n  square(a: bigint): bigint {\n    return a ** 2n;\n  }\n  times(a: bigint, b: bigint): bigint {\n    return a * b;\n  }\n  toNumber(a: bigint): number {\n    return Number(a);\n  }\n  trunc(a: bigint): bigint {\n    return a;\n  }\n}\n","import { Ops } from \"./ops\";\n\nexport class NumOps implements Ops<number> {\n  cast(a: unknown): number {\n    return Number(a);\n  }\n  dividedBy(a: number, b: number): number {\n    return a / b;\n  }\n  equal(a: number, b: number): boolean {\n    return a == b;\n  }\n  half(a: number): number {\n    return a * 0.5;\n  }\n  isOdd(a: number): boolean {\n    return (a & 1) === 1;\n  }\n  larger(a: number, b: number): boolean {\n    return a > b;\n  }\n  largerEq(a: number, b: number): boolean {\n    return a >= b;\n  }\n  minus(a: number, b: number): number {\n    return a - b;\n  }\n  minus1(a: number): number {\n    return a - 1;\n  }\n  mod(a: number, b: number): number {\n    return a % b;\n  }\n  negative(a: number): number {\n    return -a;\n  }\n  plus(a: number, b: number): number {\n    return a + b;\n  }\n  plus1(a: number): number {\n    return a + 1;\n  }\n  sign(a: number): number {\n    return a < 0 ? -1 : +(a > 0);\n  }\n  smaller(a: number, b: number): boolean {\n    return a < b;\n  }\n  smallerEq(a: number, b: number): boolean {\n    return a <= b;\n  }\n  square(a: number): number {\n    return a ** 2;\n  }\n  times(a: number, b: number): number {\n    return a * b;\n  }\n  toNumber(a: number): number {\n    return a;\n  }\n  trunc(a: number): number {\n    return Math.trunc(a);\n  }\n}\n","import { trySafe } from \"../utils/try\";\nimport { Ops } from \"./ops\";\n\nexport class SafeNumOps implements Ops<number> {\n  cast(a: unknown): number {\n    return trySafe(Number(a));\n  }\n  dividedBy(a: number, b: number): number {\n    return trySafe(a / b);\n  }\n  equal(a: number, b: number): boolean {\n    return a == b;\n  }\n  half(a: number): number {\n    return a * 0.5;\n  }\n  isOdd(a: number): boolean {\n    return (a & 1) === 1;\n  }\n  larger(a: number, b: number): boolean {\n    return a > b;\n  }\n  largerEq(a: number, b: number): boolean {\n    return a >= b;\n  }\n  minus(a: number, b: number): number {\n    return trySafe(a - b);\n  }\n  minus1(a: number): number {\n    return trySafe(a - 1);\n  }\n  mod(a: number, b: number): number {\n    return a % b;\n  }\n  negative(a: number): number {\n    return trySafe(-a);\n  }\n  plus(a: number, b: number): number {\n    return trySafe(a + b);\n  }\n  plus1(a: number): number {\n    return trySafe(a + 1);\n  }\n  sign(a: number): number {\n    return a < 0n ? -1 : +(a > 0n);\n  }\n  smaller(a: number, b: number): boolean {\n    return a < b;\n  }\n  smallerEq(a: number, b: number): boolean {\n    return a <= b;\n  }\n  square(a: number): number {\n    return trySafe(a ** 2);\n  }\n  times(a: number, b: number): number {\n    return trySafe(a * b);\n  }\n  toNumber(a: number): number {\n    return a;\n  }\n  trunc(a: number): number {\n    return Math.trunc(a);\n  }\n}\n","import { BigOps } from \"../../ops/bigOps\";\nimport { SumEncoding } from \"../encoding\";\nimport { Generator } from \"../gen\";\nimport { KPowerGen } from \"../gen/kPowerGen\";\n\nexport class BigKbonacci implements Generator<bigint, bigint> {\n  private customs: bigint[];\n  private gen: KPowerGen<bigint, bigint>;\n\n  constructor(K: number, customs?: bigint[], cached = true) {\n    const ops = new BigOps();\n    const encoding = new SumEncoding(ops);\n    this.customs = customs ?? [];\n    this.gen = new KPowerGen(K, { cached, customs, encoding, ops });\n  }\n\n  get K(): number {\n    return this.gen.K;\n  }\n\n  get(index: bigint): bigint {\n    return this.gen.get(index);\n  }\n\n  getCached(): boolean {\n    return this.gen.getCached();\n  }\n\n  getCustoms(): bigint[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.gen.setCached(value);\n  }\n}\n","import { BigKbonacci } from \"./bigKbonacci\";\n\nexport class BigFibonacci extends BigKbonacci {\n  constructor(customs?: bigint[], cached?: boolean) {\n    super(2, customs, cached);\n  }\n}\n","import { BigKbonacci } from \"./bigKbonacci\";\n\nexport class BigTribonacci extends BigKbonacci {\n  constructor(customs?: bigint[], cached?: boolean) {\n    super(3, customs, cached);\n  }\n}\n","import { SafeNumOps } from \"../../ops\";\nimport { Generator } from \"../gen/generator\";\nimport { SumEncoding } from \"../encoding\";\nimport { KPowerGen } from \"../gen\";\n\nexport class Kbonacci implements Generator<number, number> {\n  private customs: number[];\n  private gen: KPowerGen<number, number>;\n\n  constructor(K: number, customs?: number[], cached = true) {\n    const ops = new SafeNumOps();\n    const encoding = new SumEncoding(ops);\n    this.customs = customs ?? [];\n    this.gen = new KPowerGen(K, { cached, customs, encoding, ops });\n  }\n\n  get K(): number {\n    return this.gen.K;\n  }\n\n  get(index: number): number {\n    return this.gen.get(index);\n  }\n\n  getCached(): boolean {\n    return this.gen.getCached();\n  }\n\n  getCustoms(): number[] {\n    return this.customs;\n  }\n\n  setCached(value: boolean): void {\n    this.gen.setCached(value);\n  }\n}\n","import { Kbonacci } from \"./kbonacci\";\n\nexport class Fibonacci extends Kbonacci {\n  constructor(customs?: number[], cached?: boolean) {\n    super(2, customs, cached);\n  }\n}\n","import { Kbonacci } from \"./kbonacci\";\n\nexport class Tribonacci extends Kbonacci {\n  constructor(customs?: number[], cached?: boolean) {\n    super(3, customs, cached);\n  }\n}\n"],"names":["DimensionError","actual","expected","relation","a","b","IntegerError","value","label","OutOfBoundsError","min","max","msg","message","K_MIN","SAFE_MAX","SAFE_MIN","UnsafeError","isInteger","isSafeNumber","tryK","K","tryNumTerms","maxLen","terms","trySafe","n","Powers","keyOps","valOps","cached","__publicField","N","pows","i","KPowerGen","config","customs","encoding","indexOps","iOps","T","data","delta","mod","PowerGen","one","copy","A","B","target","start","end","getSum","arr","ops","padStart","array","targetLength","padValue","SlidingWindowGen","valueOps","_0","_1","maxN","vOps","temp","newValue","initMatrix","Y","X","matrix","matrixMult","zero","M","_a","P","_b","C","m","p","val","EncodingFormat","MatrixEncoding","x","y","rem","term","minY","RevSumEncoding","mat","z","SumEncoding","res","util","v","TermEncoding","sum","toMatrix","BigOps","NumOps","SafeNumOps","BigKbonacci","index","BigFibonacci","BigTribonacci","Kbonacci","Fibonacci","Tribonacci"],"mappings":"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"}